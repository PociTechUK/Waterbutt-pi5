APP="/Users/poci/Desktop/Waterbutt Controller v0.7-IMPORT+GIT.app"SRC="/tmp/wb_src.applescript"BK="$HOME/Desktop/Waterbutt_Controller_BACKUP_$(date +%Y%m%d-%H%M%S).applescript"osadecompile "$APP" > "$SRC"cp "$SRC" "$BK"python3 - <<'PY'import re, iop="/tmp/wb_src.applescript"s=io.open(p,'r',encoding='utf-8').read()def upsert(block, body, src):    pat=re.compile(r'(on\s+'+block+r'\b[\s\S]*?end\s+'+block+r')',re.M)    if pat.search(src):        return pat.sub(body,src,1)    return src.rstrip()+"\n\n"+body+"\n"s=re.sub(r'(property\s+APP_VERSION\s*:\s*")[^"]*(")', r'\1v0.8.2-DESTFIX\2', s, count=1)new_import = r'''on importFromClipboardTo(relPathDefault)	if my assertProjectExists() is false then return	set clip to do shell script "/usr/bin/pbpaste -Prefer txt | /usr/bin/tr -d '\\r'"	if clip is "" then		display dialog "Clipboard is empty." buttons {"OK"} default button 1 with icon stop		return	end if	set detectedDest to my parseDestFromText(clip)	if detectedDest is "" then		set relPath to text returned of (display dialog "Destination path *inside repo*:" default answer relPathDefault)	else		set relPath to text returned of (display dialog "Destination path *inside repo* (detected from DEST header):" default answer detectedDest)	end if	if relPath ends with "/" then set relPath to text 1 thru -2 of relPath	set destPath to PROJECT_DIR & "/" & relPath	my writeFileAtomic(destPath, clip)	display notification "Imported from clipboard ? " & relPath with title "Waterbutt Controller"	my showInWBTab(my gitStatusCmd(), "WB Git")end importFromClipboardTo'''new_parse_text = r'''on parseDestFromText(contentText)	try		set tmp to do shell script "/usr/bin/mktemp /tmp/wbdest.XXXXXX"		do shell script "/usr/bin/printf %s " & quoted form of contentText & " > " & quoted form of tmp		set sh to "/bin/sh -c " & quoted form of ("/usr/bin/head -n 40 " & quoted form of tmp & " | /usr/bin/tr -d '\\r' | /usr/bin/sed -n -E 's/.*[Dd][Ee][Ss][Tt]:[[:space:]]*([^[:space:]]+).*/\\1/p' | /usr/bin/head -n 1")		set dest to do shell script sh		do shell script "/bin/rm -f " & quoted form of tmp		return my trim(dest)	on error		return ""	end tryend parseDestFromText'''new_parse_file = r'''on parseDestFromFile(srcPath)	try		set sh to "/bin/sh -c " & quoted form of ("/usr/bin/head -n 40 " & quoted form of srcPath & " | /usr/bin/tr -d '\\r' | /usr/bin/sed -n -E 's/.*[Dd][Ee][Ss][Tt]:[[:space:]]*([^[:space:]]+).*/\\1/p' | /usr/bin/head -n 1")		set dest to do shell script sh		return my trim(dest)	on error		return ""	end tryend parseDestFromFile'''s=upsert('importFromClipboardTo', new_import, s)s=upsert('parseDestFromText', new_parse_text, s)s=upsert('parseDestFromFile', new_parse_file, s)io.open(p,'w',encoding='utf-8').write(s)PYosacompile -s -o "$APP" "$SRC"open "$APP"